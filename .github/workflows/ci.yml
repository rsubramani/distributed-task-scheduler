name: CI/CD for Distributed Task Scheduler

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t rsubramani470/distributed-task-scheduler .
          docker push rsubramani470/distributed-task-scheduler

      - name: Set up kind (Kubernetes in Docker)
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create Kubernetes cluster
        run: kind create cluster

      - name: Set kubectl context to kind
        run: kubectl cluster-info --context kind-kind

      - name: Deploy to kind Kubernetes cluster
        run: |
          kubectl apply -f kubernetes/deployment.yaml

      - name: Wait for deployment to complete
        run: |
          kubectl rollout status deployment/scheduler-api --timeout=120s
        continue-on-error: true

      # Debugging steps:
      - name: Get Pod Status
        run: kubectl get pods -o wide

      - name: Describe Deployment
        run: kubectl describe deployment scheduler-api

      - name: Get Pod Logs
        run: |
          POD_NAME=$(kubectl get pods -l app=scheduler-api -o jsonpath="{.items[0].metadata.name}")
          kubectl logs $POD_NAME

      - name: Get Events
        run: kubectl get events --sort-by='.metadata.creationTimestamp'
